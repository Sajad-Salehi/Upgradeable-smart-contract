{
  "abi": [
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token_addrs",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/contract_V2.sol",
    "5": "C:/Users/User/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/contract_V2.sol",
    "exportedSymbols": {
      "ContractV2": [
        178
      ],
      "IERC20": [
        556
      ]
    },
    "id": 179,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 83,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:23:10"
      },
      {
        "absolutePath": "C:/Users/User/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 84,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 179,
        "sourceUnit": 557,
        "src": "85:56:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ContractV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 178,
        "linearizedBaseContracts": [
          178
        ],
        "name": "ContractV2",
        "nameLocation": "153:10:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 88,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "210:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "175:43:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 87,
              "keyType": {
                "id": 85,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "183:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "175:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 86,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "194:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 91,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "239:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "224:64:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 89,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "224:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837303739663337363238303543466639433937396135624443366635363438624346454537364338",
              "id": 90,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "246:42:10",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x7079f3762805CFf9C979a5bDC6f5648bCFEE76C8"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 94,
            "mutability": "constant",
            "name": "admin",
            "nameLocation": "311:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "294:67:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 92,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "294:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832626136653733354334663465323761454533303863396130653230393231453835334163304636",
              "id": 93,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "319:42:10",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2ba6e735C4f4e27aEE308c9a0e20921E853Ac0F6"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "437:165:10",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "453:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "448:11:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "448:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 115,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "488:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "488:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 111,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "508:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ContractV2_$178",
                              "typeString": "contract ContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ContractV2_$178",
                              "typeString": "contract ContractV2"
                            }
                          ],
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "500:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "500:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "500:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 113,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "515:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 104,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "469:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 103,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 556,
                          "src": "462:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "462:12:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$556",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 537,
                      "src": "462:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "462:60:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "448:74:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 117,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "540:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "550:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "540:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "532:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "532:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "532:23:10"
                },
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 122,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "565:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 125,
                      "indexExpression": {
                        "expression": {
                          "id": 123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "574:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "574:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "565:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 126,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "589:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "565:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "565:30:10"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "377:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "393:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "385:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "token_addrs",
                  "nameLocation": "409:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "401:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:37:10"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:0:10"
            },
            "scope": 178,
            "src": "368:234:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "657:196:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 136,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "676:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 139,
                          "indexExpression": {
                            "expression": {
                              "id": 137,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "685:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "685:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "676:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 140,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "699:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "676:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520656e6f7567682062616c616e6365",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64699ea7aa277086f50b87611724a92e114e4587ef70c050918ab98f6b908ad6",
                          "typeString": "literal_string \"you do not have enough balance\""
                        },
                        "value": "you do not have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64699ea7aa277086f50b87611724a92e114e4587ef70c050918ab98f6b908ad6",
                          "typeString": "literal_string \"you do not have enough balance\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "668:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:72:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "668:72:10"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 145,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "750:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "759:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "759:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "750:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "774:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "750:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "750:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "812:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "812:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 158,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "824:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 159,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "833:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "842:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "833:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "824:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 153,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "797:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 152,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 556,
                          "src": "790:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "790:12:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$556",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 505,
                      "src": "790:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "790:56:10"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "617:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "634:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "626:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:16:10"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:10"
            },
            "scope": 178,
            "src": "608:245:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "910:45:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 171,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "928:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 174,
                    "indexExpression": {
                      "expression": {
                        "id": 172,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "937:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "937:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "928:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 170,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "921:27:10"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "868:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:10"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "901:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:9:10"
            },
            "scope": 178,
            "src": "859:96:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 179,
        "src": "144:813:10",
        "usedErrors": []
      }
    ],
    "src": "60:898:10"
  },
  "bytecode": "6080604052600180546001600160a01b031916737079f3762805cff9c979a5bdc6f5648bcfee76c817905534801561003657600080fd5b50610425806100466000396000f3fe60806040526004361061004a5760003560e01c806312065fe01461004f57806327e235e3146100805780632e1a7d4d146100ad5780636e553f65146100c257806389a30271146100d5575b600080fd5b34801561005b57600080fd5b50336000908152602081905260409020545b6040519081526020015b60405180910390f35b34801561008c57600080fd5b5061006d61009b3660046102ff565b60006020819052908152604090205481565b6100c06100bb366004610321565b61010d565b005b6100c06100d036600461033a565b61022d565b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b039091168152602001610077565b33600090815260208190526040902054811061016f5760405162461bcd60e51b815260206004820152601e60248201527f796f7520646f206e6f74206861766520656e6f7567682062616c616e63650000604482015260640160405180910390fd5b336000908152602081905260408120805483929061018e90849061037c565b90915550506001546001600160a01b031663a9059cbb336101b0606485610393565b6101ba90856103b5565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610205573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022991906103cd565b5050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a991906103cd565b90506001811515146102ba57600080fd5b33600090815260208190526040812080548592906102d99084906103b5565b9091555050505050565b80356001600160a01b03811681146102fa57600080fd5b919050565b60006020828403121561031157600080fd5b61031a826102e3565b9392505050565b60006020828403121561033357600080fd5b5035919050565b6000806040838503121561034d57600080fd5b8235915061035d602084016102e3565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561038e5761038e610366565b500390565b6000826103b057634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156103c8576103c8610366565b500190565b6000602082840312156103df57600080fd5b8151801515811461031a57600080fdfea26469706673582212205b0e50546c05f089f78d4af735b2361f59adf2e40c1432c347510ad51328efb064736f6c634300080d0033",
  "bytecodeSha1": "fb7493672238547e5dfea472690df2c2cbae1232",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ContractV2",
  "coverageMap": {
    "branches": {
      "10": {
        "ContractV2.deposit": {
          "7": [
            540,
            554,
            true
          ]
        },
        "ContractV2.withdraw": {
          "6": [
            676,
            705,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "10": {
        "ContractV2.deposit": {
          "4": [
            532,
            555
          ],
          "5": [
            565,
            595
          ]
        },
        "ContractV2.getBalance": {
          "0": [
            921,
            948
          ]
        },
        "ContractV2.withdraw": {
          "1": [
            668,
            740
          ],
          "2": [
            750,
            780
          ],
          "3": [
            790,
            846
          ]
        }
      },
      "5": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20"
  ],
  "deployedBytecode": "60806040526004361061004a5760003560e01c806312065fe01461004f57806327e235e3146100805780632e1a7d4d146100ad5780636e553f65146100c257806389a30271146100d5575b600080fd5b34801561005b57600080fd5b50336000908152602081905260409020545b6040519081526020015b60405180910390f35b34801561008c57600080fd5b5061006d61009b3660046102ff565b60006020819052908152604090205481565b6100c06100bb366004610321565b61010d565b005b6100c06100d036600461033a565b61022d565b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b039091168152602001610077565b33600090815260208190526040902054811061016f5760405162461bcd60e51b815260206004820152601e60248201527f796f7520646f206e6f74206861766520656e6f7567682062616c616e63650000604482015260640160405180910390fd5b336000908152602081905260408120805483929061018e90849061037c565b90915550506001546001600160a01b031663a9059cbb336101b0606485610393565b6101ba90856103b5565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610205573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022991906103cd565b5050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a991906103cd565b90506001811515146102ba57600080fd5b33600090815260208190526040812080548592906102d99084906103b5565b9091555050505050565b80356001600160a01b03811681146102fa57600080fd5b919050565b60006020828403121561031157600080fd5b61031a826102e3565b9392505050565b60006020828403121561033357600080fd5b5035919050565b6000806040838503121561034d57600080fd5b8235915061035d602084016102e3565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561038e5761038e610366565b500390565b6000826103b057634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156103c8576103c8610366565b500190565b6000602082840312156103df57600080fd5b8151801515811461031a57600080fdfea26469706673582212205b0e50546c05f089f78d4af735b2361f59adf2e40c1432c347510ad51328efb064736f6c634300080d0033",
  "deployedSourceMap": "144:813:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:96;;;;;;;;;;-1:-1:-1;937:10:10;901:7;928:20;;;;;;;;;;;859:96;;;160:25:13;;;148:2;133:18;859:96:10;;;;;;;;175:43;;;;;;;;;;-1:-1:-1;175:43:10;;;;;:::i;:::-;;;;;;;;;;;;;;;608:245;;;;;;:::i;:::-;;:::i;:::-;;368:234;;;;;;:::i;:::-;;:::i;224:64::-;;;;;;;;;;-1:-1:-1;224:64:10;;;;-1:-1:-1;;;;;224:64:10;;;;;;-1:-1:-1;;;;;1173:32:13;;;1155:51;;1143:2;1128:18;224:64:10;1009:203:13;608:245:10;685:10;676:8;:20;;;;;;;;;;;:29;-1:-1:-1;668:72:10;;;;-1:-1:-1;;;668:72:10;;1419:2:13;668:72:10;;;1401:21:13;1458:2;1438:18;;;1431:30;1497:32;1477:18;;;1470:60;1547:18;;668:72:10;;;;;;;;759:10;750:8;:20;;;;;;;;;;:30;;774:6;;750:8;:30;;774:6;;750:30;:::i;:::-;;;;-1:-1:-1;;797:4:10;;-1:-1:-1;;;;;797:4:10;790:21;812:10;833:12;842:3;833:6;:12;:::i;:::-;824:21;;:6;:21;:::i;:::-;790:56;;-1:-1:-1;;;;;;790:56:10;;;;;;;-1:-1:-1;;;;;2385:32:13;;;790:56:10;;;2367:51:13;2434:18;;;2427:34;2340:18;;790:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;608:245;:::o;368:234::-;469:4;;462:60;;-1:-1:-1;;;462:60:10;;488:10;462:60;;;2994:34:13;508:4:10;3044:18:13;;;3037:43;3096:18;;;3089:34;;;448:11:10;;-1:-1:-1;;;;;469:4:10;;462:25;;2929:18:13;;462:60:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;448:74;-1:-1:-1;550:4:10;540:14;;;;532:23;;;;;;574:10;565:8;:20;;;;;;;;;;:30;;589:6;;565:8;:30;;589:6;;565:30;:::i;:::-;;;;-1:-1:-1;;;;;368:234:10:o;196:173:13:-;264:20;;-1:-1:-1;;;;;313:31:13;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:13:o;565:180::-;624:6;677:2;665:9;656:7;652:23;648:32;645:52;;;693:1;690;683:12;645:52;-1:-1:-1;716:23:13;;565:180;-1:-1:-1;565:180:13:o;750:254::-;818:6;826;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;931:9;918:23;908:33;;960:38;994:2;983:9;979:18;960:38;:::i;:::-;950:48;;750:254;;;;;:::o;1576:127::-;1637:10;1632:3;1628:20;1625:1;1618:31;1668:4;1665:1;1658:15;1692:4;1689:1;1682:15;1708:125;1748:4;1776:1;1773;1770:8;1767:34;;;1781:18;;:::i;:::-;-1:-1:-1;1818:9:13;;1708:125::o;1838:217::-;1878:1;1904;1894:132;;1948:10;1943:3;1939:20;1936:1;1929:31;1983:4;1980:1;1973:15;2011:4;2008:1;2001:15;1894:132;-1:-1:-1;2040:9:13;;1838:217::o;2060:128::-;2100:3;2131:1;2127:6;2124:1;2121:13;2118:39;;;2137:18;;:::i;:::-;-1:-1:-1;2173:9:13;;2060:128::o;2472:277::-;2539:6;2592:2;2580:9;2571:7;2567:23;2563:32;2560:52;;;2608:1;2605;2598:12;2560:52;2640:9;2634:16;2693:5;2686:13;2679:21;2672:5;2669:32;2659:60;;2715:1;2712;2705:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    144,
    957
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x321 JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x77 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520646F206E6F74206861766520656E6F7567682062616C616E63650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x18E SWAP1 DUP5 SWAP1 PUSH2 0x37C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0x1B0 PUSH1 0x64 DUP6 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x1BA SWAP1 DUP6 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x3CD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x285 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3CD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x2D9 SWAP1 DUP5 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31A DUP3 PUSH2 0x2E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x35D PUSH1 0x20 DUP5 ADD PUSH2 0x2E3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x38E JUMPI PUSH2 0x38E PUSH2 0x366 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x366 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xE POP SLOAD PUSH13 0x5F089F78D4AF735B2361F59AD CALLCODE 0xE4 0xC EQ ORIGIN 0xC3 SELFBALANCE MLOAD EXP 0xD5 SGT 0x28 0xEF 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        144,
        957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "LT",
      "path": "10"
    },
    "9": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "13": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "SHR",
      "path": "10"
    },
    "19": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x12065FE0"
    },
    "25": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "EQ",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "30": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "31": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x27E235E3"
    },
    "36": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "EQ",
      "path": "10"
    },
    "37": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x80"
    },
    "40": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "41": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "42": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2E1A7D4D"
    },
    "47": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "EQ",
      "path": "10"
    },
    "48": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAD"
    },
    "51": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "52": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "53": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6E553F65"
    },
    "58": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "EQ",
      "path": "10"
    },
    "59": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC2"
    },
    "62": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "63": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "64": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x89A30271"
    },
    "69": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "EQ",
      "path": "10"
    },
    "70": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD5"
    },
    "73": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "74": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "75": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        144,
        957
      ],
      "op": "REVERT",
      "path": "10"
    },
    "79": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "80": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "81": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "DUP1",
      "path": "10"
    },
    "82": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "83": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B"
    },
    "86": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "89": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "DUP1",
      "path": "10"
    },
    "90": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "REVERT",
      "path": "10"
    },
    "91": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "92": {
      "op": "POP"
    },
    "93": {
      "fn": "ContractV2.getBalance",
      "offset": [
        937,
        947
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 0
    },
    "94": {
      "fn": "ContractV2.getBalance",
      "offset": [
        901,
        908
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "96": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "97": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "DUP2",
      "path": "10"
    },
    "98": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "99": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "101": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "DUP2",
      "path": "10"
    },
    "102": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "103": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "104": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "106": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "107": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "108": {
      "fn": "ContractV2.getBalance",
      "offset": [
        928,
        948
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "109": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "110": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "112": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "113": {
      "op": "SWAP1"
    },
    "114": {
      "op": "DUP2"
    },
    "115": {
      "op": "MSTORE"
    },
    "116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "118": {
      "op": "ADD"
    },
    "119": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "120": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "122": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "123": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "DUP1",
      "path": "10"
    },
    "124": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "125": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "SUB",
      "path": "10"
    },
    "126": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "127": {
      "fn": "ContractV2.getBalance",
      "offset": [
        859,
        955
      ],
      "op": "RETURN",
      "path": "10"
    },
    "128": {
      "offset": [
        175,
        218
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "129": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "130": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "DUP1",
      "path": "10"
    },
    "131": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "132": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C"
    },
    "135": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "138": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "DUP1",
      "path": "10"
    },
    "139": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "REVERT",
      "path": "10"
    },
    "140": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "offset": [
        175,
        218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6D"
    },
    "145": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9B"
    },
    "148": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "149": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "151": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FF"
    },
    "154": {
      "fn": "ContractV2.getBalance",
      "jump": "i",
      "offset": [
        175,
        218
      ],
      "op": "JUMP",
      "path": "10"
    },
    "155": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "156": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "158": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "160": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "DUP2",
      "path": "10"
    },
    "161": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "162": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "163": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "164": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "DUP2",
      "path": "10"
    },
    "165": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "166": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "168": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "169": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "170": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "171": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "DUP2",
      "path": "10"
    },
    "172": {
      "fn": "ContractV2.getBalance",
      "offset": [
        175,
        218
      ],
      "op": "JUMP",
      "path": "10"
    },
    "173": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "174": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC0"
    },
    "177": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBB"
    },
    "180": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "181": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "183": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x321"
    },
    "186": {
      "fn": "ContractV2.withdraw",
      "jump": "i",
      "offset": [
        608,
        853
      ],
      "op": "JUMP",
      "path": "10"
    },
    "187": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "188": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10D"
    },
    "191": {
      "fn": "ContractV2.withdraw",
      "jump": "i",
      "offset": [
        608,
        853
      ],
      "op": "JUMP",
      "path": "10"
    },
    "192": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "193": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "STOP",
      "path": "10"
    },
    "194": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "195": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC0"
    },
    "198": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD0"
    },
    "201": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "202": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "204": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x33A"
    },
    "207": {
      "fn": "ContractV2.deposit",
      "jump": "i",
      "offset": [
        368,
        602
      ],
      "op": "JUMP",
      "path": "10"
    },
    "208": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "209": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22D"
    },
    "212": {
      "fn": "ContractV2.deposit",
      "jump": "i",
      "offset": [
        368,
        602
      ],
      "op": "JUMP",
      "path": "10"
    },
    "213": {
      "offset": [
        224,
        288
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "214": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "215": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "DUP1",
      "path": "10"
    },
    "216": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "217": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE1"
    },
    "220": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "221": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "223": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "DUP1",
      "path": "10"
    },
    "224": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "REVERT",
      "path": "10"
    },
    "225": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "offset": [
        224,
        288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "229": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "230": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF5"
    },
    "233": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "op": "SUB"
    },
    "242": {
      "offset": [
        224,
        288
      ],
      "op": "AND",
      "path": "10"
    },
    "243": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "DUP2",
      "path": "10"
    },
    "244": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "JUMP",
      "path": "10"
    },
    "245": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "246": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "248": {
      "fn": "ContractV2.deposit",
      "offset": [
        224,
        288
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "255": {
      "op": "SHL"
    },
    "256": {
      "op": "SUB"
    },
    "257": {
      "op": "SWAP1"
    },
    "258": {
      "op": "SWAP2"
    },
    "259": {
      "op": "AND"
    },
    "260": {
      "op": "DUP2"
    },
    "261": {
      "op": "MSTORE"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "264": {
      "op": "ADD"
    },
    "265": {
      "offset": [
        224,
        288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x77"
    },
    "268": {
      "op": "JUMP"
    },
    "269": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "270": {
      "fn": "ContractV2.withdraw",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 1
    },
    "271": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        684
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "273": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "274": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "DUP2",
      "path": "10"
    },
    "275": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "276": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "278": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "DUP2",
      "path": "10"
    },
    "279": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "280": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "281": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "283": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "284": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "285": {
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        696
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "286": {
      "branch": 6,
      "fn": "ContractV2.withdraw",
      "offset": [
        676,
        705
      ],
      "op": "DUP2",
      "path": "10"
    },
    "287": {
      "op": "LT"
    },
    "288": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16F"
    },
    "291": {
      "branch": 6,
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "292": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "294": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "301": {
      "op": "SHL"
    },
    "302": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "DUP2",
      "path": "10"
    },
    "303": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "306": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "308": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "DUP3",
      "path": "10"
    },
    "309": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "ADD",
      "path": "10"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "315": {
      "op": "DUP3"
    },
    "316": {
      "op": "ADD"
    },
    "317": {
      "op": "MSTORE"
    },
    "318": {
      "op": "PUSH32",
      "value": "0x796F7520646F206E6F74206861766520656E6F7567682062616C616E63650000"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "353": {
      "op": "DUP3"
    },
    "354": {
      "op": "ADD"
    },
    "355": {
      "op": "MSTORE"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "358": {
      "op": "ADD"
    },
    "359": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "361": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "362": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "DUP1",
      "path": "10"
    },
    "363": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "364": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "SUB",
      "path": "10"
    },
    "365": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "366": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "367": {
      "fn": "ContractV2.withdraw",
      "offset": [
        668,
        740
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "368": {
      "fn": "ContractV2.withdraw",
      "offset": [
        759,
        769
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 2
    },
    "369": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        758
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "371": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "372": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "DUP2",
      "path": "10"
    },
    "373": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "374": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "376": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "DUP2",
      "path": "10"
    },
    "377": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "378": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "379": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "381": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "DUP2",
      "path": "10"
    },
    "382": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        770
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "383": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "DUP1",
      "path": "10"
    },
    "384": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "385": {
      "fn": "ContractV2.withdraw",
      "offset": [
        774,
        780
      ],
      "op": "DUP4",
      "path": "10"
    },
    "386": {
      "fn": "ContractV2.withdraw",
      "offset": [
        774,
        780
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "387": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        758
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "388": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18E"
    },
    "391": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "392": {
      "fn": "ContractV2.withdraw",
      "offset": [
        774,
        780
      ],
      "op": "DUP5",
      "path": "10"
    },
    "393": {
      "fn": "ContractV2.withdraw",
      "offset": [
        774,
        780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "394": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37C"
    },
    "397": {
      "fn": "ContractV2.withdraw",
      "jump": "i",
      "offset": [
        750,
        780
      ],
      "op": "JUMP",
      "path": "10"
    },
    "398": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "399": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "400": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "401": {
      "fn": "ContractV2.withdraw",
      "offset": [
        750,
        780
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "402": {
      "op": "POP"
    },
    "403": {
      "op": "POP"
    },
    "404": {
      "fn": "ContractV2.withdraw",
      "offset": [
        797,
        801
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x1"
    },
    "406": {
      "fn": "ContractV2.withdraw",
      "offset": [
        797,
        801
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "op": "SUB"
    },
    "415": {
      "fn": "ContractV2.withdraw",
      "offset": [
        797,
        801
      ],
      "op": "AND",
      "path": "10"
    },
    "416": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        811
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA9059CBB"
    },
    "421": {
      "fn": "ContractV2.withdraw",
      "offset": [
        812,
        822
      ],
      "op": "CALLER",
      "path": "10"
    },
    "422": {
      "fn": "ContractV2.withdraw",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B0"
    },
    "425": {
      "fn": "ContractV2.withdraw",
      "offset": [
        842,
        845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "427": {
      "fn": "ContractV2.withdraw",
      "offset": [
        833,
        839
      ],
      "op": "DUP6",
      "path": "10"
    },
    "428": {
      "fn": "ContractV2.withdraw",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x393"
    },
    "431": {
      "fn": "ContractV2.withdraw",
      "jump": "i",
      "offset": [
        833,
        845
      ],
      "op": "JUMP",
      "path": "10"
    },
    "432": {
      "fn": "ContractV2.withdraw",
      "offset": [
        833,
        845
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "433": {
      "fn": "ContractV2.withdraw",
      "offset": [
        824,
        845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BA"
    },
    "436": {
      "fn": "ContractV2.withdraw",
      "offset": [
        824,
        845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "437": {
      "fn": "ContractV2.withdraw",
      "offset": [
        824,
        830
      ],
      "op": "DUP6",
      "path": "10"
    },
    "438": {
      "fn": "ContractV2.withdraw",
      "offset": [
        824,
        845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B5"
    },
    "441": {
      "fn": "ContractV2.withdraw",
      "jump": "i",
      "offset": [
        824,
        845
      ],
      "op": "JUMP",
      "path": "10"
    },
    "442": {
      "fn": "ContractV2.withdraw",
      "offset": [
        824,
        845
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "443": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "445": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "op": "NOT"
    },
    "455": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "457": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP6",
      "path": "10"
    },
    "458": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "459": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "SHL",
      "path": "10"
    },
    "460": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "AND",
      "path": "10"
    },
    "461": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP2",
      "path": "10"
    },
    "462": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "op": "SWAP1"
    },
    "472": {
      "op": "SWAP3"
    },
    "473": {
      "op": "AND"
    },
    "474": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "476": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP4",
      "path": "10"
    },
    "477": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "ADD",
      "path": "10"
    },
    "478": {
      "op": "MSTORE"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "481": {
      "op": "DUP3"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "489": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "491": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "492": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP1",
      "path": "10"
    },
    "493": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP4",
      "path": "10"
    },
    "494": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "SUB",
      "path": "10"
    },
    "495": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP2",
      "path": "10"
    },
    "496": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "498": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP8",
      "path": "10"
    },
    "499": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "GAS",
      "path": "10"
    },
    "500": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "CALL",
      "path": "10"
    },
    "501": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "502": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP1",
      "path": "10"
    },
    "503": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "504": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x205"
    },
    "507": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "508": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "509": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "511": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP1",
      "path": "10"
    },
    "512": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "513": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "514": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "516": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "REVERT",
      "path": "10"
    },
    "517": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "518": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "POP",
      "path": "10"
    },
    "519": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "POP",
      "path": "10"
    },
    "520": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "POP",
      "path": "10"
    },
    "521": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "POP",
      "path": "10"
    },
    "522": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "524": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "525": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "526": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "528": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "NOT",
      "path": "10"
    },
    "529": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "531": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP3",
      "path": "10"
    },
    "532": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "ADD",
      "path": "10"
    },
    "533": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "AND",
      "path": "10"
    },
    "534": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP3",
      "path": "10"
    },
    "535": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "ADD",
      "path": "10"
    },
    "536": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP1",
      "path": "10"
    },
    "537": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "539": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "540": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "POP",
      "path": "10"
    },
    "541": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "DUP2",
      "path": "10"
    },
    "542": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "ADD",
      "path": "10"
    },
    "543": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "544": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x229"
    },
    "547": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "548": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "549": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3CD"
    },
    "552": {
      "fn": "ContractV2.withdraw",
      "jump": "i",
      "offset": [
        790,
        846
      ],
      "op": "JUMP",
      "path": "10"
    },
    "553": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "554": {
      "fn": "ContractV2.withdraw",
      "offset": [
        790,
        846
      ],
      "op": "POP",
      "path": "10"
    },
    "555": {
      "fn": "ContractV2.withdraw",
      "offset": [
        608,
        853
      ],
      "op": "POP",
      "path": "10"
    },
    "556": {
      "fn": "ContractV2.withdraw",
      "jump": "o",
      "offset": [
        608,
        853
      ],
      "op": "JUMP",
      "path": "10"
    },
    "557": {
      "fn": "ContractV2.deposit",
      "offset": [
        368,
        602
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "558": {
      "fn": "ContractV2.deposit",
      "offset": [
        469,
        473
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "560": {
      "fn": "ContractV2.deposit",
      "offset": [
        469,
        473
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "561": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "563": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "564": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP2",
      "path": "10"
    },
    "573": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "574": {
      "fn": "ContractV2.deposit",
      "offset": [
        488,
        498
      ],
      "op": "CALLER",
      "path": "10"
    },
    "575": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "577": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP3",
      "path": "10"
    },
    "578": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "ADD",
      "path": "10"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "fn": "ContractV2.deposit",
      "offset": [
        508,
        512
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "583": {
      "op": "DUP3"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "MSTORE"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "588": {
      "op": "DUP2"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "op": "DUP5"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "fn": "ContractV2.deposit",
      "offset": [
        448,
        459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "595": {
      "fn": "ContractV2.deposit",
      "offset": [
        448,
        459
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "op": "SUB"
    },
    "604": {
      "fn": "ContractV2.deposit",
      "offset": [
        469,
        473
      ],
      "op": "AND",
      "path": "10"
    },
    "605": {
      "fn": "ContractV2.deposit",
      "offset": [
        469,
        473
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "606": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        487
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "611": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "614": {
      "op": "ADD"
    },
    "615": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "617": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "619": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "620": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP1",
      "path": "10"
    },
    "621": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP4",
      "path": "10"
    },
    "622": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "SUB",
      "path": "10"
    },
    "623": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP2",
      "path": "10"
    },
    "624": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "626": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP8",
      "path": "10"
    },
    "627": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "GAS",
      "path": "10"
    },
    "628": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "CALL",
      "path": "10"
    },
    "629": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "630": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP1",
      "path": "10"
    },
    "631": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "632": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x285"
    },
    "635": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "636": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "637": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "639": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP1",
      "path": "10"
    },
    "640": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "641": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "642": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "644": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "REVERT",
      "path": "10"
    },
    "645": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "646": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "POP",
      "path": "10"
    },
    "647": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "POP",
      "path": "10"
    },
    "648": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "POP",
      "path": "10"
    },
    "649": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "POP",
      "path": "10"
    },
    "650": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "652": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "653": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "654": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "656": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "NOT",
      "path": "10"
    },
    "657": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "659": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP3",
      "path": "10"
    },
    "660": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "ADD",
      "path": "10"
    },
    "661": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "AND",
      "path": "10"
    },
    "662": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP3",
      "path": "10"
    },
    "663": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "ADD",
      "path": "10"
    },
    "664": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP1",
      "path": "10"
    },
    "665": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "667": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "668": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "POP",
      "path": "10"
    },
    "669": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "DUP2",
      "path": "10"
    },
    "670": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "ADD",
      "path": "10"
    },
    "671": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "672": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A9"
    },
    "675": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "676": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "677": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3CD"
    },
    "680": {
      "fn": "ContractV2.deposit",
      "jump": "i",
      "offset": [
        462,
        522
      ],
      "op": "JUMP",
      "path": "10"
    },
    "681": {
      "fn": "ContractV2.deposit",
      "offset": [
        462,
        522
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "682": {
      "fn": "ContractV2.deposit",
      "offset": [
        448,
        522
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "fn": "ContractV2.deposit",
      "offset": [
        550,
        554
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x1"
    },
    "686": {
      "fn": "ContractV2.deposit",
      "offset": [
        540,
        554
      ],
      "op": "DUP2",
      "path": "10"
    },
    "687": {
      "fn": "ContractV2.deposit",
      "offset": [
        540,
        554
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "688": {
      "fn": "ContractV2.deposit",
      "offset": [
        540,
        554
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "689": {
      "branch": 7,
      "fn": "ContractV2.deposit",
      "offset": [
        540,
        554
      ],
      "op": "EQ",
      "path": "10"
    },
    "690": {
      "fn": "ContractV2.deposit",
      "offset": [
        532,
        555
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BA"
    },
    "693": {
      "branch": 7,
      "fn": "ContractV2.deposit",
      "offset": [
        532,
        555
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "694": {
      "fn": "ContractV2.deposit",
      "offset": [
        532,
        555
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "696": {
      "fn": "ContractV2.deposit",
      "offset": [
        532,
        555
      ],
      "op": "DUP1",
      "path": "10"
    },
    "697": {
      "fn": "ContractV2.deposit",
      "offset": [
        532,
        555
      ],
      "op": "REVERT",
      "path": "10"
    },
    "698": {
      "fn": "ContractV2.deposit",
      "offset": [
        532,
        555
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "699": {
      "fn": "ContractV2.deposit",
      "offset": [
        574,
        584
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 5
    },
    "700": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        573
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "702": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "703": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "DUP2",
      "path": "10"
    },
    "704": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "705": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "707": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "DUP2",
      "path": "10"
    },
    "708": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "709": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "710": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "712": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "DUP2",
      "path": "10"
    },
    "713": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        585
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "714": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "DUP1",
      "path": "10"
    },
    "715": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "716": {
      "fn": "ContractV2.deposit",
      "offset": [
        589,
        595
      ],
      "op": "DUP6",
      "path": "10"
    },
    "717": {
      "fn": "ContractV2.deposit",
      "offset": [
        589,
        595
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "718": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        573
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "719": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D9"
    },
    "722": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "723": {
      "fn": "ContractV2.deposit",
      "offset": [
        589,
        595
      ],
      "op": "DUP5",
      "path": "10"
    },
    "724": {
      "fn": "ContractV2.deposit",
      "offset": [
        589,
        595
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "725": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B5"
    },
    "728": {
      "fn": "ContractV2.deposit",
      "jump": "i",
      "offset": [
        565,
        595
      ],
      "op": "JUMP",
      "path": "10"
    },
    "729": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "730": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "731": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "732": {
      "fn": "ContractV2.deposit",
      "offset": [
        565,
        595
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "op": "POP"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "fn": "ContractV2.deposit",
      "jump": "o",
      "offset": [
        368,
        602
      ],
      "op": "JUMP",
      "path": "10"
    },
    "739": {
      "op": "JUMPDEST"
    },
    "740": {
      "op": "DUP1"
    },
    "741": {
      "op": "CALLDATALOAD"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "op": "DUP2"
    },
    "751": {
      "op": "AND"
    },
    "752": {
      "op": "DUP2"
    },
    "753": {
      "op": "EQ"
    },
    "754": {
      "op": "PUSH2",
      "value": "0x2FA"
    },
    "757": {
      "op": "JUMPI"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "760": {
      "op": "DUP1"
    },
    "761": {
      "op": "REVERT"
    },
    "762": {
      "op": "JUMPDEST"
    },
    "763": {
      "op": "SWAP2"
    },
    "764": {
      "op": "SWAP1"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "jump": "o",
      "op": "JUMP"
    },
    "767": {
      "op": "JUMPDEST"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "772": {
      "op": "DUP3"
    },
    "773": {
      "op": "DUP5"
    },
    "774": {
      "op": "SUB"
    },
    "775": {
      "op": "SLT"
    },
    "776": {
      "op": "ISZERO"
    },
    "777": {
      "op": "PUSH2",
      "value": "0x311"
    },
    "780": {
      "op": "JUMPI"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "783": {
      "op": "DUP1"
    },
    "784": {
      "op": "REVERT"
    },
    "785": {
      "op": "JUMPDEST"
    },
    "786": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "789": {
      "op": "DUP3"
    },
    "790": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "793": {
      "jump": "i",
      "op": "JUMP"
    },
    "794": {
      "op": "JUMPDEST"
    },
    "795": {
      "op": "SWAP4"
    },
    "796": {
      "op": "SWAP3"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "op": "POP"
    },
    "799": {
      "op": "POP"
    },
    "800": {
      "jump": "o",
      "op": "JUMP"
    },
    "801": {
      "op": "JUMPDEST"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "806": {
      "op": "DUP3"
    },
    "807": {
      "op": "DUP5"
    },
    "808": {
      "op": "SUB"
    },
    "809": {
      "op": "SLT"
    },
    "810": {
      "op": "ISZERO"
    },
    "811": {
      "op": "PUSH2",
      "value": "0x333"
    },
    "814": {
      "op": "JUMPI"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "817": {
      "op": "DUP1"
    },
    "818": {
      "op": "REVERT"
    },
    "819": {
      "op": "JUMPDEST"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "op": "CALLDATALOAD"
    },
    "822": {
      "op": "SWAP2"
    },
    "823": {
      "op": "SWAP1"
    },
    "824": {
      "op": "POP"
    },
    "825": {
      "jump": "o",
      "op": "JUMP"
    },
    "826": {
      "op": "JUMPDEST"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "829": {
      "op": "DUP1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "832": {
      "op": "DUP4"
    },
    "833": {
      "op": "DUP6"
    },
    "834": {
      "op": "SUB"
    },
    "835": {
      "op": "SLT"
    },
    "836": {
      "op": "ISZERO"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34D"
    },
    "840": {
      "op": "JUMPI"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "843": {
      "op": "DUP1"
    },
    "844": {
      "op": "REVERT"
    },
    "845": {
      "op": "JUMPDEST"
    },
    "846": {
      "op": "DUP3"
    },
    "847": {
      "op": "CALLDATALOAD"
    },
    "848": {
      "op": "SWAP2"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "op": "PUSH2",
      "value": "0x35D"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "855": {
      "op": "DUP5"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "860": {
      "jump": "i",
      "op": "JUMP"
    },
    "861": {
      "op": "JUMPDEST"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "op": "SWAP3"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "op": "SWAP3"
    },
    "867": {
      "op": "SWAP1"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "jump": "o",
      "op": "JUMP"
    },
    "870": {
      "op": "JUMPDEST"
    },
    "871": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "881": {
      "op": "MSTORE"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "886": {
      "op": "MSTORE"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "891": {
      "op": "REVERT"
    },
    "892": {
      "op": "JUMPDEST"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "895": {
      "op": "DUP3"
    },
    "896": {
      "op": "DUP3"
    },
    "897": {
      "op": "LT"
    },
    "898": {
      "op": "ISZERO"
    },
    "899": {
      "op": "PUSH2",
      "value": "0x38E"
    },
    "902": {
      "op": "JUMPI"
    },
    "903": {
      "op": "PUSH2",
      "value": "0x38E"
    },
    "906": {
      "op": "PUSH2",
      "value": "0x366"
    },
    "909": {
      "jump": "i",
      "op": "JUMP"
    },
    "910": {
      "op": "JUMPDEST"
    },
    "911": {
      "op": "POP"
    },
    "912": {
      "op": "SUB"
    },
    "913": {
      "op": "SWAP1"
    },
    "914": {
      "jump": "o",
      "op": "JUMP"
    },
    "915": {
      "op": "JUMPDEST"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "PUSH2",
      "value": "0x3B0"
    },
    "922": {
      "op": "JUMPI"
    },
    "923": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "930": {
      "op": "SHL"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "943": {
      "op": "REVERT"
    },
    "944": {
      "op": "JUMPDEST"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "op": "DIV"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "jump": "o",
      "op": "JUMP"
    },
    "949": {
      "op": "JUMPDEST"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "952": {
      "op": "DUP3"
    },
    "953": {
      "op": "NOT"
    },
    "954": {
      "op": "DUP3"
    },
    "955": {
      "op": "GT"
    },
    "956": {
      "op": "ISZERO"
    },
    "957": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "960": {
      "op": "JUMPI"
    },
    "961": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "964": {
      "op": "PUSH2",
      "value": "0x366"
    },
    "967": {
      "jump": "i",
      "op": "JUMP"
    },
    "968": {
      "op": "JUMPDEST"
    },
    "969": {
      "op": "POP"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "op": "SWAP1"
    },
    "972": {
      "jump": "o",
      "op": "JUMP"
    },
    "973": {
      "op": "JUMPDEST"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "978": {
      "op": "DUP3"
    },
    "979": {
      "op": "DUP5"
    },
    "980": {
      "op": "SUB"
    },
    "981": {
      "op": "SLT"
    },
    "982": {
      "op": "ISZERO"
    },
    "983": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "986": {
      "op": "JUMPI"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "989": {
      "op": "DUP1"
    },
    "990": {
      "op": "REVERT"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "op": "DUP2"
    },
    "993": {
      "op": "MLOAD"
    },
    "994": {
      "op": "DUP1"
    },
    "995": {
      "op": "ISZERO"
    },
    "996": {
      "op": "ISZERO"
    },
    "997": {
      "op": "DUP2"
    },
    "998": {
      "op": "EQ"
    },
    "999": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "1002": {
      "op": "JUMPI"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1005": {
      "op": "DUP1"
    },
    "1006": {
      "op": "REVERT"
    }
  },
  "sha1": "45d81c723a0ea37664ff0d9b5bf114b28d577793",
  "source": "// contracts/ContractV2.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ncontract ContractV2 {\n    \n    mapping(address => uint256) public balances;\n    address public USDC = 0x7079f3762805CFf9C979a5bDC6f5648bCFEE76C8;\n    address constant admin = 0x2ba6e735C4f4e27aEE308c9a0e20921E853Ac0F6;\n\n    function deposit(uint256 amount, address token_addrs) public payable {\n\n        bool result = IERC20(USDC).transferFrom(msg.sender, address(this), amount);\n        require(result == true);\n        balances[msg.sender] += amount;\n    }\n\n    function withdraw(uint256 amount) public payable {\n\n        require(balances[msg.sender] > amount, 'you do not have enough balance');\n        balances[msg.sender] -= amount;\n        IERC20(USDC).transfer(msg.sender, amount + amount / 100);\n    }\n\n    function getBalance() public view returns(uint256) {\n\n        return balances[msg.sender];\n    }\n}\n",
  "sourceMap": "144:813:10:-:0;;;224:64;;;-1:-1:-1;;;;;;224:64:10;246:42;224:64;;;144:813;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contract_V2.sol",
  "type": "contract"
}